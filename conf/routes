# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Authentication pages
GET         /signup                                controllers.Auth.startSignUp
POST        /signup                                controllers.Auth.handleStartSignUp
GET         /signup/:token                         controllers.Auth.signUp(token: String)
GET         /signin                                controllers.Auth.signIn
POST        /authenticate                          controllers.Auth.authenticate
GET         /signout                               controllers.Auth.signOut
GET         /reset-password                        controllers.Auth.forgotPassword
POST        /reset-password                        controllers.Auth.handleForgotPassword
GET         /reset-password/:token                 controllers.Auth.resetPassword(token: String)
POST        /reset-password/:token                 controllers.Auth.handleResetPassword(token: String)
GET         /change-password                       controllers.Auth.changePassword
POST        /change-password                       controllers.Auth.handleChangePassword
GET         /denied                                controllers.Auth.accessDenied


# Home page
GET         /                                      controllers.Application.index
GET         /settings                              controllers.Application.settings
GET         /myaccount                             controllers.Application.myAccount
GET         /myprofile                             controllers.Application.myProfile

GET         /lang/$lang<(en|es)>                   controllers.Application.selectLang(lang: String)


# Map static resources from the /public folder to the /assets URL path
GET         /public/*file                          controllers.MyAssets.public(path="/public", file: Asset)
GET         /lib/*file                             controllers.MyAssets.lib(path="/public/lib", file: Asset)
GET         /javascripts/*file                     controllers.MyAssets.javascripts(path="/public/javascripts", file: Asset)
GET         /css/*file                             controllers.MyAssets.css(path="/public/stylesheets", file: Asset)
GET         /js/*file                              controllers.MyAssets.js(path="/public/javascripts", file: Asset)
GET         /img/*file                             controllers.MyAssets.img(path="/public/images", file: Asset)
GET         /bc/*file                              controllers.MyAssets.bc(path="/public/bower_components", file: Asset)
GET         /bower_component/*file                              controllers.MyAssets.bc(path="/public/bower_components", file: Asset)
GET         /common/css/*file                      controllers.MyAssets.commonCss(path="/public/lib/common/stylesheets", file: Asset)
GET         /common/js/*file                       controllers.MyAssets.commonJs(path="/public/lib/common/javascripts", file: Asset)
GET         /common/img/*file                      controllers.MyAssets.commonImg(path="/public/lib/common/images", file: Asset)



#Content Management
GET         /write-article                         controllers.ContentController.writeArticle()
GET         /write                                 controllers.ContentController.write()
GET         /article/id/:id                           controllers.ContentController.article(id:Long)
POST        /api/save-article                      controllers.ContentController.saveArticle()
GET         /api/all-article                       controllers.ContentController.getAllArticles()
#GET         /api/article-views/:articleId         controllers.ContentController.getViews(articelId:Long)
GET         /api/article-stats-by-author           controllers.ContentController.getArticleStatsByAuthor()
GET         /api/top-article-stats-by-views        controllers.ContentController.getTopArticleStatsByViews()
GET         /api/author-by-article/:articleId      controllers.ContentController.getAuthorByArticle(articleId: Long)
#GET         /api/top-articles-by-views/:firstId/:lastId        controllers.ContentController.getTopArticlesByViews(firstId: Int, lastId: Int)
#
GET         /view-article/:articleId               controllers.ContentController.viewArticle(articleId:Long)
GET         /like-unlike/:articleId                controllers.ContentController.likeUnlike(articleId: Long)


##UserProfile Management
GET         /api/user                                          controllers.UserProfileController.getUser()
#GET         /api/user-info-minimal                             controllers.UserProfileController.getUserInfoMinimal()
#GET         /api/influence                 controllers.UserProfileController.getInfluence()

#Settings Management
POST        /api/upload                            controllers.SettingsController.upload()

#Relationship Management

#GET         /api/has-liked/article/:articleId                  controllers.RelationshipController.hasLiked(articleId)
#GET         /api/likes-or-unlikes/article/:articleId           controllers.RelationshipController.likesOrUnlikes(articleId)
#GET         /api/has-followed/author/:authorId                 controllers.RelationshipController.hasFollowed(authorId)
#GET         /api/follows-or-unfollows/author/:authorId         controllers.RelationshipController.followsOrUnfollows(authorId)

GET /javascriptRoutes                              controllers.Application.javascriptRoutes
#
#GET         /demo                                              controllers.ContentController.getTopArticlesByViews()